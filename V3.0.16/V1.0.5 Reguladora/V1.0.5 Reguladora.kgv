VAR_GLOBAL
    bool0 AT  %M0.0    :BOOL  ;  (*RESERVED*)
    bool1 AT  %M0.1    :BOOL  ;  (*RESERVED*)
    bool2 AT  %M0.2    :BOOL  ;  (*RESERVED*)
    bool3 AT  %M0.3    :BOOL  ;  (*RESERVED*)
    bool4 AT  %M0.4    :BOOL  ;  (*RESERVED*)
    bool5 AT  %M0.5    :BOOL  ;  (*RESERVED*)
    DEBUG_AI AT  %M0.6    :BOOL  ;  (*DEFAULT - bit para habilitar el modo debug de las entradas analógicas*)
    DEBUG AT  %M0.7    :BOOL  ;  (*DEFAULT - bit para habilitar el modo debug*)
    InitialCond AT  %M100.0  :BOOL  ;  (*DEFAULT - Señal para activar el bloque de condiciones iniciales*)
    DrvInput AT  %M100.1  :BOOL  ;  (*DEFAULT - Señal para activar el bloque de drivers de entrada*)
    DrvOutput AT  %M100.2  :BOOL  ;  (*DEFAULT - Señal para activar el bloque de drivers de salida*)
    Software AT  %M100.3  :BOOL  ;  (*DEFAULT - Señal para activar el bloque de software*)
    toggle0 AT  %M100.4  :BOOL  ;  (*DEFAULT - Bit de toggle para el conteo de tiempos en el CORE*)
    toggle1 AT  %M100.5  :BOOL  ;  (*DEFAULT - Bit de toggle para el conteo de tiempos en el CORE*)
    ReadAin AT  %M100.6  :BOOL  ;  (**)
    AInBusy AT  %M100.7  :BOOL  ;  (**)
    AI0_Alarm AT  %M101.0  :BOOL  ;  (**)
    AI0_AlrLow AT  %M101.1  :BOOL  ;  (**)
    AI0_AlrHigh AT  %M101.2  :BOOL  ;  (**)
    AI1_Alarm AT  %M101.3  :BOOL  ;  (**)
    AI1_AlrLow AT  %M101.4  :BOOL  ;  (**)
    AI1_AlrHigh AT  %M101.5  :BOOL  ;  (**)
    SwitchMode AT  %M101.6  :BOOL  ;  (**)
    ST0 AT  %M101.7  :BOOL  ;  (*Estado de la entrada digital de estados ST0*)
    PulseReset AT  %M102.0  :BOOL  ;  (**)
    ControlOut AT  %M102.3  :BOOL  ;  (**)
    ControlOut0 AT  %M102.4  :BOOL  ;  (**)
    ControlOut1 AT  %M102.5  :BOOL  ;  (**)
    PulseReset1 AT  %M102.6  :BOOL  ;  (**)
    TimerProg AT  %M102.7  :BOOL  ;  (**)
    t1Enable AT  %M103.0  :BOOL  ;  (*Enable del timer 1*)
    t2Enable AT  %M103.1  :BOOL  ;  (*Enable del timer 2*)
    t3Enable AT  %M103.2  :BOOL  ;  (*Enable del timer 3*)
    t4Enable AT  %M103.3  :BOOL  ;  (*Enable del timer 4*)
    t5Enable AT  %M103.4  :BOOL  ;  (*Enable del timer 5*)
    t6Enable AT  %M103.5  :BOOL  ;  (*Enable del timer 6*)
    t7Enable AT  %M103.6  :BOOL  ;  (*Enable del timer 7*)
    t8Enable AT  %M103.7  :BOOL  ;  (*Enable del timer 8*)
    t1WeekMonday AT  %M104.0  :BOOL  ;  (*Timer 1 -> Lunes*)
    t1WeekTuesday AT  %M104.1  :BOOL  ;  (*Timer 1 -> Martes*)
    t1WeekWednesday AT  %M104.2  :BOOL  ;  (*Timer 1 -> Miercoles*)
    t1WeekThursday AT  %M104.3  :BOOL  ;  (*Timer 1 -> Jueves*)
    t1WeekFriday AT  %M104.4  :BOOL  ;  (*Timer 1 -> Viernes*)
    t1WeekSaturday AT  %M104.5  :BOOL  ;  (*Timer 1 -> Sabado*)
    t1WeekSunday AT  %M104.6  :BOOL  ;  (*Timer 1 -> Domingo*)
    t2WeekMonday AT  %M105.0  :BOOL  ;  (*Timer 2 -> Lunes*)
    t2WeekTuesday AT  %M105.1  :BOOL  ;  (*Timer 2 -> Martes*)
    t2WeekWednesday AT  %M105.2  :BOOL  ;  (*Timer 2 -> Miercoles*)
    t2WeekThursday AT  %M105.3  :BOOL  ;  (*Timer 2 -> Jueves*)
    t2WeekFriday AT  %M105.4  :BOOL  ;  (*Timer 2 -> Viernes*)
    t2WeekSaturday AT  %M105.5  :BOOL  ;  (*Timer 2 -> Sabado*)
    t2WeekSunday AT  %M105.6  :BOOL  ;  (*Timer 2 -> Domingo*)
    t3WeekMonday AT  %M106.0  :BOOL  ;  (*Timer 3 -> Lunes*)
    t3WeekTuesday AT  %M106.1  :BOOL  ;  (*Timer 3 -> Martes*)
    t3WeekWednesday AT  %M106.2  :BOOL  ;  (*Timer 3 -> Miercoles*)
    t3WeekThursday AT  %M106.3  :BOOL  ;  (*Timer 3 -> Jueves*)
    t3WeekFriday AT  %M106.4  :BOOL  ;  (*Timer 3 -> Viernes*)
    t3WeekSaturday AT  %M106.5  :BOOL  ;  (*Timer 3 -> Sabado*)
    t3WeekSunday AT  %M106.6  :BOOL  ;  (*Timer 3 -> Domingo*)
    t4WeekMonday AT  %M107.0  :BOOL  ;  (*Timer 4 -> Lunes*)
    t4WeekTuesday AT  %M107.1  :BOOL  ;  (*Timer 4 -> Martes*)
    t4WeekWednesday AT  %M107.2  :BOOL  ;  (*Timer 4 -> Miercoles*)
    t4WeekThursday AT  %M107.3  :BOOL  ;  (*Timer 4 -> Jueves*)
    t4WeekFriday AT  %M107.4  :BOOL  ;  (*Timer 4 -> Viernes*)
    t4WeekSaturday AT  %M107.5  :BOOL  ;  (*Timer 4 -> Sabado*)
    t4WeekSunday AT  %M107.6  :BOOL  ;  (*Timer 4 -> Domingo*)
    t5WeekMonday AT  %M108.0  :BOOL  ;  (*Timer 5 -> Lunes*)
    t5WeekTuesday AT  %M108.1  :BOOL  ;  (*Timer 5 -> Martes*)
    t5WeekWednesday AT  %M108.2  :BOOL  ;  (*Timer 5 -> Miercoles*)
    t5WeekThursday AT  %M108.3  :BOOL  ;  (*Timer 5 -> Jueves*)
    t5WeekFriday AT  %M108.4  :BOOL  ;  (*Timer 5 -> Viernes*)
    t5WeekSaturday AT  %M108.5  :BOOL  ;  (*Timer 5 -> Sabado*)
    t5WeekSunday AT  %M108.6  :BOOL  ;  (*Timer 5 -> Domingo*)
    t6WeekMonday AT  %M109.0  :BOOL  ;  (*Timer 6 -> Lunes*)
    t6WeekTuesday AT  %M109.1  :BOOL  ;  (*Timer 6 -> Martes*)
    t6WeekWednesday AT  %M109.2  :BOOL  ;  (*Timer 6 -> Miercoles*)
    t6WeekThursday AT  %M109.3  :BOOL  ;  (*Timer 6 -> Jueves*)
    t6WeekFriday AT  %M109.4  :BOOL  ;  (*Timer 6 -> Viernes*)
    t6WeekSaturday AT  %M109.5  :BOOL  ;  (*Timer 6 -> Sabado*)
    t6WeekSunday AT  %M109.6  :BOOL  ;  (*Timer 6 -> Domingo*)
    t7WeekMonday AT  %M110.0  :BOOL  ;  (*Timer 7 -> Lunes*)
    t7WeekTuesday AT  %M110.1  :BOOL  ;  (*Timer 7 -> Martes*)
    t7WeekWednesday AT  %M110.2  :BOOL  ;  (*Timer 7 -> Miercoles*)
    t7WeekThursday AT  %M110.3  :BOOL  ;  (*Timer 7 -> Jueves*)
    t7WeekFriday AT  %M110.4  :BOOL  ;  (*Timer 7 -> Viernes*)
    t7WeekSaturday AT  %M110.5  :BOOL  ;  (*Timer 7 -> Sabado*)
    t7WeekSunday AT  %M110.6  :BOOL  ;  (*Timer 7 -> Domingo*)
    t8WeekMonday AT  %M111.0  :BOOL  ;  (*Timer 8 -> Lunes*)
    t8WeekTuesday AT  %M111.1  :BOOL  ;  (*Timer 8 -> Martes*)
    t8WeekWednesday AT  %M111.2  :BOOL  ;  (*Timer 8 -> Miercoles*)
    t8WeekThursday AT  %M111.3  :BOOL  ;  (*Timer 8 -> Jueves*)
    t8WeekFriday AT  %M111.4  :BOOL  ;  (*Timer 8 -> Viernes*)
    t8WeekSaturday AT  %M111.5  :BOOL  ;  (*Timer 8 -> Sabado*)
    t8WeekSunday AT  %M111.6  :BOOL  ;  (*Timer 8 -> Domingo*)
    timerRun AT  %M111.7  :BOOL  ;  (*Flag que indica que la bomba prende producto al timer*)
    errorTxRef1 AT  %M112.0  :BOOL  ;  (**)
    errorTxRef2 AT  %M112.1  :BOOL  ;  (**)
    valveBusy AT  %M112.2  :BOOL  ;  (**)
    ActValve AT  %M112.3  :BOOL  ;  (**)
    SwitchAction AT  %M112.4  :BOOL  ;  (**)
    ElectFail AT  %M112.5  :BOOL  ;  (**)
    specialTime AT  %M112.6  :BOOL  ;  (*bit que una vez activo arranca un timer de 20 min y luego vuelve el bit a cero*)
    serialTxData AT  %M112.7  :BOOL  ;  (**)
    serial_txSerial AT  %M113.0  :BOOL  ;  (**)
    serial_endRx AT  %M113.1  :BOOL  ;  (**)
    SetRcvData_float AT  %M113.2  :BOOL  ;  (**)
    SetRcvData_negat AT  %M113.3  :BOOL  ;  (**)
    SetRcvData_end AT  %M113.4  :BOOL  ;  (**)
    byte0 AT  %MB1     :BYTE  ;  (*RESERVED*)
    t1HourStart AT  %MB150   :BYTE  ;  (*Timer 1 -> Hora de encendido*)
    t1MinStart AT  %MB151   :BYTE  ;  (*Timer 1 -> Minuto de encendido*)
    t1HourStop AT  %MB152   :BYTE  ;  (*Timer 1 -> Hora de apagado*)
    t1MinStop AT  %MB153   :BYTE  ;  (*Timer 1 -> Minuto de apagado*)
    t2HourStart AT  %MB154   :BYTE  ;  (*Timer 2 -> Hora de encendido*)
    t2MinStart AT  %MB155   :BYTE  ;  (*Timer 2 -> Minuto de encendido*)
    t2HourStop AT  %MB156   :BYTE  ;  (*Timer 2 -> Hora de apagado*)
    t2MinStop AT  %MB157   :BYTE  ;  (*Timer 2 -> Minuto de apagado*)
    t3HourStart AT  %MB158   :BYTE  ;  (*Timer 3 -> Hora de encendido*)
    t3MinStart AT  %MB159   :BYTE  ;  (*Timer 3 -> Minuto de encendido*)
    t3HourStop AT  %MB160   :BYTE  ;  (*Timer 3 -> Hora de apagado*)
    t3MinStop AT  %MB161   :BYTE  ;  (*Timer 3 -> Minuto de apagado*)
    t4HourStart AT  %MB162   :BYTE  ;  (*Timer 4 -> Hora de encendido*)
    t4MinStart AT  %MB163   :BYTE  ;  (*Timer 4 -> Minuto de encendido*)
    t4HourStop AT  %MB164   :BYTE  ;  (*Timer 4 -> Hora de apagado*)
    t4MinStop AT  %MB165   :BYTE  ;  (*Timer 4 -> Minuto de apagado*)
    t5HourStart AT  %MB166   :BYTE  ;  (*Timer 5 -> Hora de encendido*)
    t5MinStart AT  %MB167   :BYTE  ;  (*Timer 5 -> Minuto de encendido*)
    t5HourStop AT  %MB168   :BYTE  ;  (*Timer 5 -> Hora de apagado*)
    t5MinStop AT  %MB169   :BYTE  ;  (*Timer 5 -> Minuto de apagado*)
    t6HourStart AT  %MB170   :BYTE  ;  (*Timer 6 -> Hora de encendido*)
    t6MinStart AT  %MB171   :BYTE  ;  (*Timer 6 -> Minuto de encendido*)
    t6HourStop AT  %MB172   :BYTE  ;  (*Timer 6 -> Hora de apagado*)
    t6MinStop AT  %MB173   :BYTE  ;  (*Timer 6 -> Minuto de apagado*)
    t7HourStart AT  %MB174   :BYTE  ;  (*Timer 7 -> Hora de encendido*)
    t7MinStart AT  %MB175   :BYTE  ;  (*Timer 7 -> Minuto de encendido*)
    t7HourStop AT  %MB176   :BYTE  ;  (*Timer 7 -> Hora de apagado*)
    t7MinStop AT  %MB177   :BYTE  ;  (*Timer 7 -> Minuto de apagado*)
    t8HourStart AT  %MB178   :BYTE  ;  (*Timer 8 -> Hora de encendido*)
    t8MinStart AT  %MB179   :BYTE  ;  (*Timer 8 -> Minuto de encendido*)
    t8HourStop AT  %MB180   :BYTE  ;  (*Timer 8 -> Hora de apagado*)
    t8MinStop AT  %MB181   :BYTE  ;  (*Timer 8 -> Minuto de apagado*)
    SetRcvData_NoCha AT  %MB186   :BYTE  ;  (**)
    SetRcvData_NoUni AT  %MB187   :BYTE  ;  (**)
    SetRcvData_NoDec AT  %MB190   :BYTE  ;  (**)
    SetRcvData_State AT  %MB191   :BYTE  ;  (**)
    byte1 AT  %MB2     :BYTE  ;  (*RESERVED*)
    byte2 AT  %MB3     :BYTE  ;  (*RESERVED*)
    byte3 AT  %MB4     :BYTE  ;  (*RESERVED*)
    byte4 AT  %MB5     :BYTE  ;  (*RESERVED*)
    byte5 AT  %MB6     :BYTE  ;  (*RESERVED*)
    byte6 AT  %MB7     :BYTE  ;  (*RESERVED*)
    byte7 AT  %MB8     :BYTE  ;  (*RESERVED*)
    byte8 AT  %MB9     :BYTE  ;  (*RESERVED*)
    t4wait AT  %MD130   :DINT  ;  (*DEFAULT - Tiempo que hay que esperar para que entre un poleo y otro exista tpoll*)
    SoftTime AT  %MD134   :DINT  ;  (*DEFAULT - Tiempo que dura la ejecución del bloque de software (seg)*)
    SoftCoun AT  %MD138   :DINT  ;  (*DEFAULT - Conteo del tiempo que transurre en la ejecución del bloque de software (seg)*)
    WaitCoun AT  %MD142   :DINT  ;  (*DEFAULT - Conteo del tiempo que transurre en la espera antes de ejecutar el bloque de software (seg)*)
    dint0 AT  %MD30    :DINT  ;  (*RESERVED*)
    dint1 AT  %MD34    :DINT  ;  (*RESERVED*)
    dint2 AT  %MD38    :DINT  ;  (*RESERVED*)
    dint3 AT  %MD42    :DINT  ;  (*RESERVED*)
    dint4 AT  %MD46    :DINT  ;  (*RESERVED*)
    dint5 AT  %MD50    :DINT  ;  (*RESERVED*)
    dint6 AT  %MD54    :DINT  ;  (*RESERVED*)
    dint7 AT  %MD58    :DINT  ;  (*RESERVED*)
    dint8 AT  %MD62    :DINT  ;  (*RESERVED*)
    dint9 AT  %MD66    :DINT  ;  (*RESERVED*)
    int0 AT  %MW10    :INT   ;  (*RESERVED*)
    int1 AT  %MW12    :INT   ;  (*RESERVED*)
    int2 AT  %MW14    :INT   ;  (*RESERVED*)
    State AT  %MW146   :INT   ;  (*DEFAULT - Numero de estado de la maquina de estados*)
    WorkingMode AT  %MW148   :INT   ;  (**)
    int3 AT  %MW16    :INT   ;  (*RESERVED*)
    int4 AT  %MW18    :INT   ;  (*RESERVED*)
    tOffRef1 AT  %MW182   :INT   ;  (**)
    tOffRef2 AT  %MW184   :INT   ;  (**)
    SetRcvData_BfPro AT  %MW188   :INT   ;  (**)
    int5 AT  %MW20    :INT   ;  (*RESERVED*)
    int6 AT  %MW22    :INT   ;  (*RESERVED*)
    int7 AT  %MW24    :INT   ;  (*RESERVED*)
    int8 AT  %MW26    :INT   ;  (*RESERVED*)
    int9 AT  %MW28    :INT   ;  (*RESERVED*)
    serial_buffAdd AT  %MW70    :INT   ;  (**)
    RUN AT  %SM0.0   :BOOL  ;  (*RESERVED*)
    FIRST AT  %SM0.1   :BOOL  ;  (*RESERVED*)
    OpenValve AT  %V3648.0 :BOOL  ;  (*Señal para abrir la válvula (1 -> Abirr | 2 -> Cerrar)*)
    DefConf AT  %V3648.1 :BOOL  ;  (*DEFAULT - Bit para el DEFAULT CONFIG*)
    valST AT  %V3648.2 :BOOL  ;  (*Estado de la válvula (0-> Cerrada | 1 -> Abierta)*)
    mReg2107_0 AT  %V4014.0 :BOOL  ;  (*DEFAULT -*)
    mReg2107_1 AT  %V4014.1 :BOOL  ;  (*DEFAULT -*)
    mReg2107_2 AT  %V4014.2 :BOOL  ;  (*DEFAULT -*)
    mReg2107_3 AT  %V4014.3 :BOOL  ;  (*DEFAULT -*)
    mReg2107_4 AT  %V4014.4 :BOOL  ;  (*DEFAULT -*)
    mReg2107_5 AT  %V4014.5 :BOOL  ;  (*DEFAULT -*)
    mReg2107_6 AT  %V4014.6 :BOOL  ;  (*DEFAULT -*)
    mReg2107_7 AT  %V4014.7 :BOOL  ;  (*DEFAULT -*)
    mReg2107_8 AT  %V4015.0 :BOOL  ;  (*DEFAULT -*)
    mReg2107_9 AT  %V4015.1 :BOOL  ;  (*DEFAULT -*)
    mReg2107_10 AT  %V4015.2 :BOOL  ;  (*DEFAULT -*)
    mReg2107_11 AT  %V4015.3 :BOOL  ;  (*DEFAULT -*)
    mReg2108_0 AT  %V4016.0 :BOOL  ;  (*DEFAULT -*)
    mReg2108_1 AT  %V4016.1 :BOOL  ;  (*DEFAULT -*)
    mReg2108_2 AT  %V4016.2 :BOOL  ;  (*DEFAULT -*)
    mReg2108_3 AT  %V4016.3 :BOOL  ;  (*DEFAULT -*)
    mReg2108_4 AT  %V4016.4 :BOOL  ;  (*DEFAULT -*)
    mReg2108_5 AT  %V4016.5 :BOOL  ;  (*DEFAULT -*)
    mReg2108_6 AT  %V4016.6 :BOOL  ;  (*DEFAULT -*)
    mReg2108_7 AT  %V4016.7 :BOOL  ;  (*DEFAULT -*)
    mReg2108_8 AT  %V4017.0 :BOOL  ;  (*DEFAULT -*)
    mReg2108_9 AT  %V4017.1 :BOOL  ;  (*DEFAULT -*)
    mReg2108_10 AT  %V4017.2 :BOOL  ;  (*DEFAULT -*)
    mReg2108_11 AT  %V4017.3 :BOOL  ;  (*DEFAULT -*)
    SetRcvData_StrD AT  %VB1000  :BYTE  ;  (**)
    SetRcvData_HexD AT  %VB1016  :BYTE  ;  (**)
    SetRcvData_byte0 AT  %VB1024  :BYTE  ;  (**)
    SetRcvData_byte1 AT  %VB1025  :BYTE  ;  (**)
    SetRcvData_byte2 AT  %VB1026  :BYTE  ;  (**)
    SetRcvData_byte3 AT  %VB1027  :BYTE  ;  (**)
    SetRcvData_byte4 AT  %VB1028  :BYTE  ;  (**)
    SetRcvData_byte5 AT  %VB1029  :BYTE  ;  (**)
    SetRcvData_byte6 AT  %VB1030  :BYTE  ;  (**)
    SetRcvData_byte7 AT  %VB1031  :BYTE  ;  (**)
    SetRcvData_byte8 AT  %VB1032  :BYTE  ;  (**)
    SetRcvData_byte9 AT  %VB1033  :BYTE  ;  (**)
    SetRcvData_StrUn AT  %VB1040  :BYTE  ;  (**)
    SetRcvData_HexUn AT  %VB1056  :BYTE  ;  (**)
    SetRTCHour AT  %VB3846  :BYTE  ;  (**)
    SetRTCMin AT  %VB3848  :BYTE  ;  (**)
    SetRTCSec AT  %VB3850  :BYTE  ;  (**)
    SetRTCWeek AT  %VB3852  :BYTE  ;  (**)
    SetRTCMonth AT  %VB3854  :BYTE  ;  (**)
    SetRTCYear AT  %VB3856  :BYTE  ;  (**)
    SetRTCCent AT  %VB3858  :BYTE  ;  (**)
    SetRTCDay AT  %VB3860  :BYTE  ;  (**)
    RTCFMT AT  %VB3862  :BYTE  ;  (**)
    RTC_Hour AT  %VB582   :BYTE  ;  (**)
    RTC_Minute AT  %VB583   :BYTE  ;  (**)
    RTC_Second AT  %VB584   :BYTE  ;  (**)
    RTC_Week AT  %VB585   :BYTE  ;  (**)
    RTC_Day AT  %VB586   :BYTE  ;  (**)
    RTC_Month AT  %VB587   :BYTE  ;  (**)
    RTC_Year AT  %VB588   :BYTE  ;  (**)
    RTC_Century AT  %VB589   :BYTE  ;  (**)
    serial_FirstTmpD AT  %VB660   :BYTE  ;  (**)
    serial_buffSize AT  %VB680   :BYTE  ;  (**)
    serial_buffData AT  %VB681   :BYTE  ;  (**)
    TimerPoll AT  %VD3680  :DINT  ;  (*DEFAULT - Tiempo que tiene que pasar entre ejecusiones del bloque de software (seg)*)
    PulseTime AT  %VD4030  :DINT  ;  (**)
    PulseCount AT  %VD4034  :DINT  ;  (**)
    PulseCount1 AT  %VD4046  :DINT  ;  (**)
    PulseTime1 AT  %VD4050  :DINT  ;  (**)
    SetRcvData_Add AT  %VD54    :DINT  ;  (**)
    real0 AT  %VR0     :REAL  ;  (*RESERVED*)
    real3 AT  %VR12    :REAL  ;  (*RESERVED*)
    real4 AT  %VR16    :REAL  ;  (*RESERVED*)
    real5 AT  %VR20    :REAL  ;  (*RESERVED*)
    real6 AT  %VR24    :REAL  ;  (*RESERVED*)
    real7 AT  %VR28    :REAL  ;  (*RESERVED*)
    real8 AT  %VR32    :REAL  ;  (*RESERVED*)
    realtr AT  %VR36    :REAL  ;  (**)
    AI0_Mmin AT  %VR3684  :REAL  ;  (**)
    AI0_Mmax AT  %VR3688  :REAL  ;  (**)
    AI1_Mmin AT  %VR3692  :REAL  ;  (**)
    AI1_Mmax AT  %VR3696  :REAL  ;  (**)
    Magpp AT  %VR3704  :REAL  ;  (**)
    mReg1955 AT  %VR3710  :REAL  ;  (*Nivel minimo*)
    mReg1957 AT  %VR3714  :REAL  ;  (*Nivel máximo*)
    mReg1959 AT  %VR3718  :REAL  ;  (*Frecuencia de la bomba*)
    mReg1962 AT  %VR3724  :REAL  ;  (*Nivel de referencia principal para el control por niveles*)
    Magpp1 AT  %VR3728  :REAL  ;  (**)
    AO0_Mmin AT  %VR3748  :REAL  ;  (**)
    AO0_Mmax AT  %VR3752  :REAL  ;  (**)
    Consigna AT  %VR3760  :REAL  ;  (*Consigna para el trabajo automatico*)
    mReg2032 AT  %VR3864  :REAL  ;  (*Nivel de referencia secundario para el control por niveles. Emergencia*)
    LMinRef1 AT  %VR3870  :REAL  ;  (**)
    LMaxRef1 AT  %VR3874  :REAL  ;  (**)
    LMinRef2 AT  %VR3878  :REAL  ;  (**)
    LMaxRef2 AT  %VR3882  :REAL  ;  (**)
    AI0Offset AT  %VR3886  :REAL  ;  (**)
    AI1Offset AT  %VR3890  :REAL  ;  (**)
    Ref1Offset AT  %VR3894  :REAL  ;  (**)
    Ref2Offset AT  %VR3898  :REAL  ;  (**)
    mReg2069 AT  %VR3938  :REAL  ;  (*DEFAULT - Lectura de la presión de impulsión de la bomba*)
    mReg2071 AT  %VR3942  :REAL  ;  (*DEFAULT - Lectura de la altura del tanque que está junto a la perforación*)
    mReg2073 AT  %VR3946  :REAL  ;  (*DEFAULT - Lectura del volumen de agua que ha pasado*)
    mReg2075 AT  %VR3950  :REAL  ;  (*DEFAULT - Lectura del caudal de impulsión de la bomba*)
    mReg2077 AT  %VR3954  :REAL  ;  (*DEFAULT -*)
    mReg2079 AT  %VR3958  :REAL  ;  (*DEFAULT - Registro del consumo de UTE*)
    mReg2081 AT  %VR3962  :REAL  ;  (*DEFAULT -*)
    mReg2083 AT  %VR3966  :REAL  ;  (*DEFAULT -*)
    mReg2085 AT  %VR3970  :REAL  ;  (*DEFAULT -*)
    mReg2087 AT  %VR3974  :REAL  ;  (*DEFAULT -*)
    mReg2089 AT  %VR3978  :REAL  ;  (*DEFAULT -*)
    mReg2091 AT  %VR3982  :REAL  ;  (*DEFAULT -*)
    mReg2093 AT  %VR3986  :REAL  ;  (*DEFAULT -*)
    mReg2095 AT  %VR3990  :REAL  ;  (*DEFAULT -*)
    mReg2097 AT  %VR3994  :REAL  ;  (*DEFAULT -*)
    mReg2099 AT  %VR3998  :REAL  ;  (*DEFAULT -*)
    real1 AT  %VR4     :REAL  ;  (*RESERVED*)
    mReg2101 AT  %VR4002  :REAL  ;  (*DEFAULT -*)
    mReg2103 AT  %VR4006  :REAL  ;  (*DEFAULT -*)
    mReg2105 AT  %VR4010  :REAL  ;  (*DEFAULT -*)
    AI0_mag AT  %VR4022  :REAL  ;  (**)
    AI1_mag AT  %VR4026  :REAL  ;  (**)
    FlowCNT0 AT  %VR4038  :REAL  ;  (*Flujo que pasa por en CNT0 (UND/h)*)
    VolCNT0 AT  %VR4042  :REAL  ;  (*Volumen que pasa por la entrada CNT0 (UND)*)
    VolCNT1 AT  %VR4054  :REAL  ;  (*Volumen que pasa por la entrada CNT1*)
    FlowCNT1 AT  %VR4058  :REAL  ;  (*Flujo que pasa por en CNT1 (UND/h)*)
    mReg2131 AT  %VR4062  :REAL  ;  (*Valor que se esta usando en la referencia remota*)
    SetRcvData_Un AT  %VR42    :REAL  ;  (**)
    SetRcvData_Dec AT  %VR46    :REAL  ;  (**)
    SetRcvData_Reg AT  %VR50    :REAL  ;  (**)
    MinLevel AT  %VR560   :REAL  ;  (**)
    MaxLevel AT  %VR564   :REAL  ;  (**)
    LevelRef AT  %VR570   :REAL  ;  (**)
    FreqPump AT  %VR574   :REAL  ;  (**)
    RemoteRef AT  %VR578   :REAL  ;  (**)
    ref2Temp AT  %VR590   :REAL  ;  (**)
    real2 AT  %VR8     :REAL  ;  (*RESERVED*)
    mReg1934 AT  %VW3668  :INT   ;  (*100 -> EMERGENCIA | 101 -> AUTOMATICO | 102 -REMOTO*)
    mReg1935 AT  %VW3670  :INT   ;  (*100 -> APAGAR | 101 -> PRENDER*)
    TimePulseOn AT  %VW3700  :INT   ;  (**)
    TimePulseOff AT  %VW3702  :INT   ;  (**)
    WebMode AT  %VW3708  :INT   ;  (**)
    controlSystem AT  %VW3722  :INT   ;  (*Tipo de control ( 0 -> NIVELES DE LLENADO | 1 -> NIVELES DE VACIADO |  2-> EXTERNO | 3 -> CONSIGNA )*)
    TimePulseOn1 AT  %VW3732  :INT   ;  (**)
    TimePulseOff1 AT  %VW3734  :INT   ;  (**)
    AI0_Imin AT  %VW3736  :INT   ;  (**)
    AI0_Imax AT  %VW3738  :INT   ;  (**)
    AI1_Imin AT  %VW3740  :INT   ;  (**)
    AI1_Imax AT  %VW3742  :INT   ;  (**)
    AO0_Imin AT  %VW3744  :INT   ;  (**)
    AO0_Imax AT  %VW3746  :INT   ;  (**)
    TypeRef AT  %VW3756  :INT   ;  (*Tipo de referencia (0 -> REMOTE | 1 -> AI_0 | 2-> AI_1 | 3 -> CNT_0 | 4 -> CNT_1)*)
    mReg1982 AT  %VW3764  :INT   ;  (*Enable de timers [ byte -> timer8,timer7,timer6,timer5,timer4,timer3,timer2,timer1]*)
    mReg1983 AT  %VW3766  :INT   ;  (*Timer1Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1984 AT  %VW3768  :INT   ;  (*Timer2Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1985 AT  %VW3770  :INT   ;  (*Timer3Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1986 AT  %VW3772  :INT   ;  (*Timer4Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1987 AT  %VW3774  :INT   ;  (*Timer5Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1988 AT  %VW3776  :INT   ;  (*Timer6Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1989 AT  %VW3778  :INT   ;  (*Timer7Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1990 AT  %VW3780  :INT   ;  (*Timer8Week -> [byte -> null,Sun,Sat,Fri,Thr,Wed,Tues,Mon]*)
    mReg1991 AT  %VW3782  :INT   ;  (*Timer 1 -> Hora de encendido*)
    mReg1992 AT  %VW3784  :INT   ;  (*Timer 1 -> Minuto de encendido*)
    mReg1993 AT  %VW3786  :INT   ;  (*Timer 1 -> Hora de apagado*)
    mReg1994 AT  %VW3788  :INT   ;  (*Timer 1 -> Minuto de apagado*)
    mReg1995 AT  %VW3790  :INT   ;  (*Timer 2 -> Hora de encendido*)
    mReg1996 AT  %VW3792  :INT   ;  (*Timer 2 -> Minuto de encendido*)
    mReg1997 AT  %VW3794  :INT   ;  (*Timer 2 -> Hora de apagado*)
    mReg1998 AT  %VW3796  :INT   ;  (*Timer 2 -> Minuto de apagado*)
    mReg1999 AT  %VW3798  :INT   ;  (*Timer 3 -> Hora de encendido*)
    mReg2000 AT  %VW3800  :INT   ;  (*Timer 3 -> Minuto de encendido*)
    mReg2001 AT  %VW3802  :INT   ;  (*Timer 3 -> Hora de apagado*)
    mReg2002 AT  %VW3804  :INT   ;  (*Timer 3 -> Minuto de apagado*)
    mReg2003 AT  %VW3806  :INT   ;  (*Timer 4 -> Hora de encendido*)
    mReg2004 AT  %VW3808  :INT   ;  (*Timer 4 -> Minuto de encendido*)
    mReg2005 AT  %VW3810  :INT   ;  (*Timer 4 -> Hora de apagado*)
    mReg2006 AT  %VW3812  :INT   ;  (*Timer 4 -> Minuto de apagado*)
    mReg2007 AT  %VW3814  :INT   ;  (*Timer 5 -> Hora de encendido*)
    mReg2008 AT  %VW3816  :INT   ;  (*Timer 5 -> Minuto de encendido*)
    mReg2009 AT  %VW3818  :INT   ;  (*Timer 5 -> Hora de apagado*)
    mReg2010 AT  %VW3820  :INT   ;  (*Timer 5 -> Minuto de apagado*)
    mReg2011 AT  %VW3822  :INT   ;  (*Timer 6 -> Hora de encendido*)
    mReg2012 AT  %VW3824  :INT   ;  (*Timer 6 -> Minuto de encendido*)
    mReg2013 AT  %VW3826  :INT   ;  (*Timer 6 -> Hora de apagado*)
    mReg2014 AT  %VW3828  :INT   ;  (*Timer 6 -> Minuto de apagado*)
    mReg2015 AT  %VW3830  :INT   ;  (*Timer 7 -> Hora de encendido*)
    mReg2016 AT  %VW3832  :INT   ;  (*Timer 7 -> Minuto de encendido*)
    mReg2017 AT  %VW3834  :INT   ;  (*Timer 7 -> Hora de apagado*)
    mReg2018 AT  %VW3836  :INT   ;  (*Timer 7 -> Minuto de apagado*)
    mReg2019 AT  %VW3838  :INT   ;  (*Timer 8 -> Hora de encendido*)
    mReg2020 AT  %VW3840  :INT   ;  (*Timer 8 -> Minuto de encendido*)
    mReg2021 AT  %VW3842  :INT   ;  (*Timer 8 -> Hora de apagado*)
    mReg2022 AT  %VW3844  :INT   ;  (*Timer 8 -> Minuto de apagado*)
    mReg2067 AT  %VW3934  :INT   ;  (*DEFAULT - 100 -> EMERGENCIA | 101 -> LOCAL | 102 -REMOTO | 103 -> AUTOMATICO*)
    States AT  %VW4014  :INT   ;  (**)
    AI0 AT  %VW4018  :INT   ;  (**)
    AI1 AT  %VW4020  :INT   ;  (**)
    Time2OpenValve AT  %VW4066  :INT   ;  (**)
    Time2CloseValve AT  %VW4068  :INT   ;  (**)
    Time2Check AT  %VW4070  :INT   ;  (*tiempo en segundo de espera para el check*)
    Time2Set AT  %VW4072  :INT   ;  (*tiempo en segundo de espera para el set*)
    waitingTime AT  %VW4074  :INT   ;  (**)
END_VAR
VAR_GLOBAL
    T17    :TON   ;  (*  *)
    T18    :TON   ;  (*  *)
    T70    :TON   ;  (*  *)
    T71    :TON   ;  (*  *)
    T4     :TON   ;  (*  *)
    T5     :TON   ;  (*  *)
    T15    :TON   ;  (*  *)
    T16    :TON   ;  (*  *)
    T10    :TON   ;  (*  *)
    T13    :TON   ;  (*  *)
    T14    :TON   ;  (*  *)
    T11    :TON   ;  (*  *)
    T81    :TON   ;  (*  *)
    T80    :TON   ;  (*  *)
    T82    :TON   ;  (*  *)
    T83    :TON   ;  (*  *)
    T84    :TON   ;  (*  *)
    T85    :TON   ;  (*  *)
    T86    :TON   ;  (*  *)
    T87    :TON   ;  (*  *)
    T88    :TON   ;  (*  *)
    T89    :TON   ;  (*  *)
    T12    :TON   ;  (*  *)
    T1     :TON   ;  (*  *)
    T20    :TON   ;  (*  *)
    T21    :TON   ;  (*  *)
    T22    :TON   ;  (*  *)
    T23    :TON   ;  (*  *)
    T24    :TON   ;  (*  *)
    T25    :TON   ;  (*  *)
    T90    :TON   ;  (*  *)
END_VAR